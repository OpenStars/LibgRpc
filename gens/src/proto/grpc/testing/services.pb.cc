// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/proto/grpc/testing/services.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "src/proto/grpc/testing/services.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace grpc {
namespace testing {

namespace protobuf_src_2fproto_2fgrpc_2ftesting_2fservices_2eproto {


namespace {


}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = { ~0u };
static const ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static const ::google::protobuf::Message* const* file_default_instances = NULL;
namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "src/proto/grpc/testing/services.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      NULL, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void TableStruct::Shutdown() {
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::grpc::testing::protobuf_src_2fproto_2fgrpc_2ftesting_2fmessages_2eproto::InitDefaults();
  ::grpc::testing::protobuf_src_2fproto_2fgrpc_2ftesting_2fcontrol_2eproto::InitDefaults();
  ::grpc::testing::protobuf_src_2fproto_2fgrpc_2ftesting_2fstats_2eproto::InitDefaults();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n%src/proto/grpc/testing/services.proto\022"
      "\014grpc.testing\032%src/proto/grpc/testing/me"
      "ssages.proto\032$src/proto/grpc/testing/con"
      "trol.proto\032\"src/proto/grpc/testing/stats"
      ".proto2\246\003\n\020BenchmarkService\022F\n\tUnaryCall"
      "\022\033.grpc.testing.SimpleRequest\032\034.grpc.tes"
      "ting.SimpleResponse\022N\n\rStreamingCall\022\033.g"
      "rpc.testing.SimpleRequest\032\034.grpc.testing"
      ".SimpleResponse(\0010\001\022R\n\023StreamingFromClie"
      "nt\022\033.grpc.testing.SimpleRequest\032\034.grpc.t"
      "esting.SimpleResponse(\001\022R\n\023StreamingFrom"
      "Server\022\033.grpc.testing.SimpleRequest\032\034.gr"
      "pc.testing.SimpleResponse0\001\022R\n\021Streaming"
      "BothWays\022\033.grpc.testing.SimpleRequest\032\034."
      "grpc.testing.SimpleResponse(\0010\0012\227\002\n\rWork"
      "erService\022E\n\tRunServer\022\030.grpc.testing.Se"
      "rverArgs\032\032.grpc.testing.ServerStatus(\0010\001"
      "\022E\n\tRunClient\022\030.grpc.testing.ClientArgs\032"
      "\032.grpc.testing.ClientStatus(\0010\001\022B\n\tCoreC"
      "ount\022\031.grpc.testing.CoreRequest\032\032.grpc.t"
      "esting.CoreResponse\0224\n\nQuitWorker\022\022.grpc"
      ".testing.Void\032\022.grpc.testing.Void2^\n\030Rep"
      "ortQpsScenarioService\022B\n\016ReportScenario\022"
      "\034.grpc.testing.ScenarioResult\032\022.grpc.tes"
      "ting.Voidb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 977);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "src/proto/grpc/testing/services.proto", &protobuf_RegisterTypes);
  ::grpc::testing::protobuf_src_2fproto_2fgrpc_2ftesting_2fmessages_2eproto::AddDescriptors();
  ::grpc::testing::protobuf_src_2fproto_2fgrpc_2ftesting_2fcontrol_2eproto::AddDescriptors();
  ::grpc::testing::protobuf_src_2fproto_2fgrpc_2ftesting_2fstats_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_src_2fproto_2fgrpc_2ftesting_2fservices_2eproto


// @@protoc_insertion_point(namespace_scope)

}  // namespace testing
}  // namespace grpc

// @@protoc_insertion_point(global_scope)
