// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/proto/grpc/testing/echo_messages.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "src/proto/grpc/testing/echo_messages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace grpc {
namespace testing {
class DebugInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DebugInfo> {
} _DebugInfo_default_instance_;
class ErrorStatusDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ErrorStatus> {
} _ErrorStatus_default_instance_;
class RequestParamsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RequestParams> {
} _RequestParams_default_instance_;
class EchoRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EchoRequest> {
} _EchoRequest_default_instance_;
class ResponseParamsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ResponseParams> {
} _ResponseParams_default_instance_;
class EchoResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EchoResponse> {
} _EchoResponse_default_instance_;

namespace protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[6];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DebugInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DebugInfo, stack_entries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DebugInfo, detail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorStatus, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorStatus, error_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorStatus, binary_error_details_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestParams, echo_deadline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestParams, client_cancel_after_us_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestParams, server_cancel_after_us_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestParams, echo_metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestParams, check_auth_context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestParams, response_message_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestParams, echo_peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestParams, expected_client_identity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestParams, skip_cancelled_check_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestParams, expected_transport_security_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestParams, debug_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestParams, server_die_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestParams, binary_error_details_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestParams, expected_error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EchoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EchoRequest, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EchoRequest, param_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseParams, request_deadline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseParams, host_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseParams, peer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EchoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EchoResponse, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EchoResponse, param_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(DebugInfo)},
  { 7, -1, sizeof(ErrorStatus)},
  { 15, -1, sizeof(RequestParams)},
  { 34, -1, sizeof(EchoRequest)},
  { 41, -1, sizeof(ResponseParams)},
  { 49, -1, sizeof(EchoResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_DebugInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ErrorStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RequestParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EchoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResponseParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EchoResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "src/proto/grpc/testing/echo_messages.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

}  // namespace

void TableStruct::Shutdown() {
  _DebugInfo_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ErrorStatus_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _RequestParams_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _EchoRequest_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _ResponseParams_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _EchoResponse_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _DebugInfo_default_instance_.DefaultConstruct();
  _ErrorStatus_default_instance_.DefaultConstruct();
  _RequestParams_default_instance_.DefaultConstruct();
  _EchoRequest_default_instance_.DefaultConstruct();
  _ResponseParams_default_instance_.DefaultConstruct();
  _EchoResponse_default_instance_.DefaultConstruct();
  _RequestParams_default_instance_.get_mutable()->debug_info_ = const_cast< ::grpc::testing::DebugInfo*>(
      ::grpc::testing::DebugInfo::internal_default_instance());
  _RequestParams_default_instance_.get_mutable()->expected_error_ = const_cast< ::grpc::testing::ErrorStatus*>(
      ::grpc::testing::ErrorStatus::internal_default_instance());
  _EchoRequest_default_instance_.get_mutable()->param_ = const_cast< ::grpc::testing::RequestParams*>(
      ::grpc::testing::RequestParams::internal_default_instance());
  _EchoResponse_default_instance_.get_mutable()->param_ = const_cast< ::grpc::testing::ResponseParams*>(
      ::grpc::testing::ResponseParams::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n*src/proto/grpc/testing/echo_messages.p"
      "roto\022\014grpc.testing\"2\n\tDebugInfo\022\025\n\rstack"
      "_entries\030\001 \003(\t\022\016\n\006detail\030\002 \001(\t\"P\n\013ErrorS"
      "tatus\022\014\n\004code\030\001 \001(\005\022\025\n\rerror_message\030\002 \001"
      "(\t\022\034\n\024binary_error_details\030\003 \001(\t\"\311\003\n\rReq"
      "uestParams\022\025\n\recho_deadline\030\001 \001(\010\022\036\n\026cli"
      "ent_cancel_after_us\030\002 \001(\005\022\036\n\026server_canc"
      "el_after_us\030\003 \001(\005\022\025\n\recho_metadata\030\004 \001(\010"
      "\022\032\n\022check_auth_context\030\005 \001(\010\022\037\n\027response"
      "_message_length\030\006 \001(\005\022\021\n\techo_peer\030\007 \001(\010"
      "\022 \n\030expected_client_identity\030\010 \001(\t\022\034\n\024sk"
      "ip_cancelled_check\030\t \001(\010\022(\n expected_tra"
      "nsport_security_type\030\n \001(\t\022+\n\ndebug_info"
      "\030\013 \001(\0132\027.grpc.testing.DebugInfo\022\022\n\nserve"
      "r_die\030\014 \001(\010\022\034\n\024binary_error_details\030\r \001("
      "\t\0221\n\016expected_error\030\016 \001(\0132\031.grpc.testing"
      ".ErrorStatus\"J\n\013EchoRequest\022\017\n\007message\030\001"
      " \001(\t\022*\n\005param\030\002 \001(\0132\033.grpc.testing.Reque"
      "stParams\"F\n\016ResponseParams\022\030\n\020request_de"
      "adline\030\001 \001(\003\022\014\n\004host\030\002 \001(\t\022\014\n\004peer\030\003 \001(\t"
      "\"L\n\014EchoResponse\022\017\n\007message\030\001 \001(\t\022+\n\005par"
      "am\030\002 \001(\0132\034.grpc.testing.ResponseParamsb\006"
      "proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 886);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "src/proto/grpc/testing/echo_messages.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DebugInfo::kStackEntriesFieldNumber;
const int DebugInfo::kDetailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DebugInfo::DebugInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc.testing.DebugInfo)
}
DebugInfo::DebugInfo(const DebugInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      stack_entries_(from.stack_entries_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  detail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.detail().size() > 0) {
    detail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detail_);
  }
  // @@protoc_insertion_point(copy_constructor:grpc.testing.DebugInfo)
}

void DebugInfo::SharedCtor() {
  detail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DebugInfo::~DebugInfo() {
  // @@protoc_insertion_point(destructor:grpc.testing.DebugInfo)
  SharedDtor();
}

void DebugInfo::SharedDtor() {
  detail_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DebugInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DebugInfo::descriptor() {
  protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DebugInfo& DebugInfo::default_instance() {
  protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

DebugInfo* DebugInfo::New(::google::protobuf::Arena* arena) const {
  DebugInfo* n = new DebugInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DebugInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.testing.DebugInfo)
  stack_entries_.Clear();
  detail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DebugInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc.testing.DebugInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string stack_entries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_stack_entries()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stack_entries(this->stack_entries_size() - 1).data(),
            this->stack_entries(this->stack_entries_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc.testing.DebugInfo.stack_entries"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string detail = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_detail()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->detail().data(), this->detail().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc.testing.DebugInfo.detail"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc.testing.DebugInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc.testing.DebugInfo)
  return false;
#undef DO_
}

void DebugInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc.testing.DebugInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string stack_entries = 1;
  for (int i = 0, n = this->stack_entries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stack_entries(i).data(), this->stack_entries(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc.testing.DebugInfo.stack_entries");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->stack_entries(i), output);
  }

  // string detail = 2;
  if (this->detail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detail().data(), this->detail().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc.testing.DebugInfo.detail");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->detail(), output);
  }

  // @@protoc_insertion_point(serialize_end:grpc.testing.DebugInfo)
}

::google::protobuf::uint8* DebugInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.testing.DebugInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string stack_entries = 1;
  for (int i = 0, n = this->stack_entries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stack_entries(i).data(), this->stack_entries(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc.testing.DebugInfo.stack_entries");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->stack_entries(i), target);
  }

  // string detail = 2;
  if (this->detail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detail().data(), this->detail().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc.testing.DebugInfo.detail");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->detail(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:grpc.testing.DebugInfo)
  return target;
}

size_t DebugInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.testing.DebugInfo)
  size_t total_size = 0;

  // repeated string stack_entries = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->stack_entries_size());
  for (int i = 0, n = this->stack_entries_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->stack_entries(i));
  }

  // string detail = 2;
  if (this->detail().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->detail());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DebugInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.testing.DebugInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DebugInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DebugInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.testing.DebugInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.testing.DebugInfo)
    MergeFrom(*source);
  }
}

void DebugInfo::MergeFrom(const DebugInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.testing.DebugInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stack_entries_.MergeFrom(from.stack_entries_);
  if (from.detail().size() > 0) {

    detail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detail_);
  }
}

void DebugInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.testing.DebugInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DebugInfo::CopyFrom(const DebugInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.testing.DebugInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DebugInfo::IsInitialized() const {
  return true;
}

void DebugInfo::Swap(DebugInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DebugInfo::InternalSwap(DebugInfo* other) {
  stack_entries_.InternalSwap(&other->stack_entries_);
  detail_.Swap(&other->detail_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DebugInfo::GetMetadata() const {
  protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DebugInfo

// repeated string stack_entries = 1;
int DebugInfo::stack_entries_size() const {
  return stack_entries_.size();
}
void DebugInfo::clear_stack_entries() {
  stack_entries_.Clear();
}
const ::std::string& DebugInfo::stack_entries(int index) const {
  // @@protoc_insertion_point(field_get:grpc.testing.DebugInfo.stack_entries)
  return stack_entries_.Get(index);
}
::std::string* DebugInfo::mutable_stack_entries(int index) {
  // @@protoc_insertion_point(field_mutable:grpc.testing.DebugInfo.stack_entries)
  return stack_entries_.Mutable(index);
}
void DebugInfo::set_stack_entries(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:grpc.testing.DebugInfo.stack_entries)
  stack_entries_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void DebugInfo::set_stack_entries(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:grpc.testing.DebugInfo.stack_entries)
  stack_entries_.Mutable(index)->assign(std::move(value));
}
#endif
void DebugInfo::set_stack_entries(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  stack_entries_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:grpc.testing.DebugInfo.stack_entries)
}
void DebugInfo::set_stack_entries(int index, const char* value, size_t size) {
  stack_entries_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:grpc.testing.DebugInfo.stack_entries)
}
::std::string* DebugInfo::add_stack_entries() {
  // @@protoc_insertion_point(field_add_mutable:grpc.testing.DebugInfo.stack_entries)
  return stack_entries_.Add();
}
void DebugInfo::add_stack_entries(const ::std::string& value) {
  stack_entries_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:grpc.testing.DebugInfo.stack_entries)
}
#if LANG_CXX11
void DebugInfo::add_stack_entries(::std::string&& value) {
  stack_entries_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:grpc.testing.DebugInfo.stack_entries)
}
#endif
void DebugInfo::add_stack_entries(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  stack_entries_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:grpc.testing.DebugInfo.stack_entries)
}
void DebugInfo::add_stack_entries(const char* value, size_t size) {
  stack_entries_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:grpc.testing.DebugInfo.stack_entries)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
DebugInfo::stack_entries() const {
  // @@protoc_insertion_point(field_list:grpc.testing.DebugInfo.stack_entries)
  return stack_entries_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
DebugInfo::mutable_stack_entries() {
  // @@protoc_insertion_point(field_mutable_list:grpc.testing.DebugInfo.stack_entries)
  return &stack_entries_;
}

// string detail = 2;
void DebugInfo::clear_detail() {
  detail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DebugInfo::detail() const {
  // @@protoc_insertion_point(field_get:grpc.testing.DebugInfo.detail)
  return detail_.GetNoArena();
}
void DebugInfo::set_detail(const ::std::string& value) {
  
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.testing.DebugInfo.detail)
}
#if LANG_CXX11
void DebugInfo::set_detail(::std::string&& value) {
  
  detail_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.testing.DebugInfo.detail)
}
#endif
void DebugInfo::set_detail(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.testing.DebugInfo.detail)
}
void DebugInfo::set_detail(const char* value, size_t size) {
  
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.testing.DebugInfo.detail)
}
::std::string* DebugInfo::mutable_detail() {
  
  // @@protoc_insertion_point(field_mutable:grpc.testing.DebugInfo.detail)
  return detail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DebugInfo::release_detail() {
  // @@protoc_insertion_point(field_release:grpc.testing.DebugInfo.detail)
  
  return detail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DebugInfo::set_allocated_detail(::std::string* detail) {
  if (detail != NULL) {
    
  } else {
    
  }
  detail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), detail);
  // @@protoc_insertion_point(field_set_allocated:grpc.testing.DebugInfo.detail)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ErrorStatus::kCodeFieldNumber;
const int ErrorStatus::kErrorMessageFieldNumber;
const int ErrorStatus::kBinaryErrorDetailsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ErrorStatus::ErrorStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc.testing.ErrorStatus)
}
ErrorStatus::ErrorStatus(const ErrorStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_message().size() > 0) {
    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  binary_error_details_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.binary_error_details().size() > 0) {
    binary_error_details_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.binary_error_details_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:grpc.testing.ErrorStatus)
}

void ErrorStatus::SharedCtor() {
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  binary_error_details_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _cached_size_ = 0;
}

ErrorStatus::~ErrorStatus() {
  // @@protoc_insertion_point(destructor:grpc.testing.ErrorStatus)
  SharedDtor();
}

void ErrorStatus::SharedDtor() {
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  binary_error_details_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ErrorStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ErrorStatus::descriptor() {
  protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ErrorStatus& ErrorStatus::default_instance() {
  protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

ErrorStatus* ErrorStatus::New(::google::protobuf::Arena* arena) const {
  ErrorStatus* n = new ErrorStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ErrorStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.testing.ErrorStatus)
  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  binary_error_details_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

bool ErrorStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc.testing.ErrorStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_message().data(), this->error_message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc.testing.ErrorStatus.error_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string binary_error_details = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_binary_error_details()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->binary_error_details().data(), this->binary_error_details().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc.testing.ErrorStatus.binary_error_details"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc.testing.ErrorStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc.testing.ErrorStatus)
  return false;
#undef DO_
}

void ErrorStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc.testing.ErrorStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), this->error_message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc.testing.ErrorStatus.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error_message(), output);
  }

  // string binary_error_details = 3;
  if (this->binary_error_details().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->binary_error_details().data(), this->binary_error_details().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc.testing.ErrorStatus.binary_error_details");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->binary_error_details(), output);
  }

  // @@protoc_insertion_point(serialize_end:grpc.testing.ErrorStatus)
}

::google::protobuf::uint8* ErrorStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.testing.ErrorStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), this->error_message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc.testing.ErrorStatus.error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error_message(), target);
  }

  // string binary_error_details = 3;
  if (this->binary_error_details().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->binary_error_details().data(), this->binary_error_details().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc.testing.ErrorStatus.binary_error_details");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->binary_error_details(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:grpc.testing.ErrorStatus)
  return target;
}

size_t ErrorStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.testing.ErrorStatus)
  size_t total_size = 0;

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_message());
  }

  // string binary_error_details = 3;
  if (this->binary_error_details().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->binary_error_details());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ErrorStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.testing.ErrorStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const ErrorStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ErrorStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.testing.ErrorStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.testing.ErrorStatus)
    MergeFrom(*source);
  }
}

void ErrorStatus::MergeFrom(const ErrorStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.testing.ErrorStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_message().size() > 0) {

    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  if (from.binary_error_details().size() > 0) {

    binary_error_details_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.binary_error_details_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void ErrorStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.testing.ErrorStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorStatus::CopyFrom(const ErrorStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.testing.ErrorStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ErrorStatus::IsInitialized() const {
  return true;
}

void ErrorStatus::Swap(ErrorStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ErrorStatus::InternalSwap(ErrorStatus* other) {
  error_message_.Swap(&other->error_message_);
  binary_error_details_.Swap(&other->binary_error_details_);
  std::swap(code_, other->code_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ErrorStatus::GetMetadata() const {
  protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ErrorStatus

// int32 code = 1;
void ErrorStatus::clear_code() {
  code_ = 0;
}
::google::protobuf::int32 ErrorStatus::code() const {
  // @@protoc_insertion_point(field_get:grpc.testing.ErrorStatus.code)
  return code_;
}
void ErrorStatus::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:grpc.testing.ErrorStatus.code)
}

// string error_message = 2;
void ErrorStatus::clear_error_message() {
  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ErrorStatus::error_message() const {
  // @@protoc_insertion_point(field_get:grpc.testing.ErrorStatus.error_message)
  return error_message_.GetNoArena();
}
void ErrorStatus::set_error_message(const ::std::string& value) {
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.testing.ErrorStatus.error_message)
}
#if LANG_CXX11
void ErrorStatus::set_error_message(::std::string&& value) {
  
  error_message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.testing.ErrorStatus.error_message)
}
#endif
void ErrorStatus::set_error_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.testing.ErrorStatus.error_message)
}
void ErrorStatus::set_error_message(const char* value, size_t size) {
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.testing.ErrorStatus.error_message)
}
::std::string* ErrorStatus::mutable_error_message() {
  
  // @@protoc_insertion_point(field_mutable:grpc.testing.ErrorStatus.error_message)
  return error_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ErrorStatus::release_error_message() {
  // @@protoc_insertion_point(field_release:grpc.testing.ErrorStatus.error_message)
  
  return error_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ErrorStatus::set_allocated_error_message(::std::string* error_message) {
  if (error_message != NULL) {
    
  } else {
    
  }
  error_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_message);
  // @@protoc_insertion_point(field_set_allocated:grpc.testing.ErrorStatus.error_message)
}

// string binary_error_details = 3;
void ErrorStatus::clear_binary_error_details() {
  binary_error_details_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ErrorStatus::binary_error_details() const {
  // @@protoc_insertion_point(field_get:grpc.testing.ErrorStatus.binary_error_details)
  return binary_error_details_.GetNoArena();
}
void ErrorStatus::set_binary_error_details(const ::std::string& value) {
  
  binary_error_details_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.testing.ErrorStatus.binary_error_details)
}
#if LANG_CXX11
void ErrorStatus::set_binary_error_details(::std::string&& value) {
  
  binary_error_details_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.testing.ErrorStatus.binary_error_details)
}
#endif
void ErrorStatus::set_binary_error_details(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  binary_error_details_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.testing.ErrorStatus.binary_error_details)
}
void ErrorStatus::set_binary_error_details(const char* value, size_t size) {
  
  binary_error_details_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.testing.ErrorStatus.binary_error_details)
}
::std::string* ErrorStatus::mutable_binary_error_details() {
  
  // @@protoc_insertion_point(field_mutable:grpc.testing.ErrorStatus.binary_error_details)
  return binary_error_details_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ErrorStatus::release_binary_error_details() {
  // @@protoc_insertion_point(field_release:grpc.testing.ErrorStatus.binary_error_details)
  
  return binary_error_details_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ErrorStatus::set_allocated_binary_error_details(::std::string* binary_error_details) {
  if (binary_error_details != NULL) {
    
  } else {
    
  }
  binary_error_details_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), binary_error_details);
  // @@protoc_insertion_point(field_set_allocated:grpc.testing.ErrorStatus.binary_error_details)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestParams::kEchoDeadlineFieldNumber;
const int RequestParams::kClientCancelAfterUsFieldNumber;
const int RequestParams::kServerCancelAfterUsFieldNumber;
const int RequestParams::kEchoMetadataFieldNumber;
const int RequestParams::kCheckAuthContextFieldNumber;
const int RequestParams::kResponseMessageLengthFieldNumber;
const int RequestParams::kEchoPeerFieldNumber;
const int RequestParams::kExpectedClientIdentityFieldNumber;
const int RequestParams::kSkipCancelledCheckFieldNumber;
const int RequestParams::kExpectedTransportSecurityTypeFieldNumber;
const int RequestParams::kDebugInfoFieldNumber;
const int RequestParams::kServerDieFieldNumber;
const int RequestParams::kBinaryErrorDetailsFieldNumber;
const int RequestParams::kExpectedErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestParams::RequestParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc.testing.RequestParams)
}
RequestParams::RequestParams(const RequestParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  expected_client_identity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.expected_client_identity().size() > 0) {
    expected_client_identity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.expected_client_identity_);
  }
  expected_transport_security_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.expected_transport_security_type().size() > 0) {
    expected_transport_security_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.expected_transport_security_type_);
  }
  binary_error_details_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.binary_error_details().size() > 0) {
    binary_error_details_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.binary_error_details_);
  }
  if (from.has_debug_info()) {
    debug_info_ = new ::grpc::testing::DebugInfo(*from.debug_info_);
  } else {
    debug_info_ = NULL;
  }
  if (from.has_expected_error()) {
    expected_error_ = new ::grpc::testing::ErrorStatus(*from.expected_error_);
  } else {
    expected_error_ = NULL;
  }
  ::memcpy(&client_cancel_after_us_, &from.client_cancel_after_us_,
    reinterpret_cast<char*>(&server_die_) -
    reinterpret_cast<char*>(&client_cancel_after_us_) + sizeof(server_die_));
  // @@protoc_insertion_point(copy_constructor:grpc.testing.RequestParams)
}

void RequestParams::SharedCtor() {
  expected_client_identity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expected_transport_security_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  binary_error_details_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&debug_info_, 0, reinterpret_cast<char*>(&server_die_) -
    reinterpret_cast<char*>(&debug_info_) + sizeof(server_die_));
  _cached_size_ = 0;
}

RequestParams::~RequestParams() {
  // @@protoc_insertion_point(destructor:grpc.testing.RequestParams)
  SharedDtor();
}

void RequestParams::SharedDtor() {
  expected_client_identity_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expected_transport_security_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  binary_error_details_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete debug_info_;
  }
  if (this != internal_default_instance()) {
    delete expected_error_;
  }
}

void RequestParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestParams::descriptor() {
  protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RequestParams& RequestParams::default_instance() {
  protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

RequestParams* RequestParams::New(::google::protobuf::Arena* arena) const {
  RequestParams* n = new RequestParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RequestParams::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.testing.RequestParams)
  expected_client_identity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expected_transport_security_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  binary_error_details_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && debug_info_ != NULL) {
    delete debug_info_;
  }
  debug_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && expected_error_ != NULL) {
    delete expected_error_;
  }
  expected_error_ = NULL;
  ::memset(&client_cancel_after_us_, 0, reinterpret_cast<char*>(&server_die_) -
    reinterpret_cast<char*>(&client_cancel_after_us_) + sizeof(server_die_));
}

bool RequestParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc.testing.RequestParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool echo_deadline = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &echo_deadline_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 client_cancel_after_us = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_cancel_after_us_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 server_cancel_after_us = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &server_cancel_after_us_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool echo_metadata = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &echo_metadata_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool check_auth_context = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &check_auth_context_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 response_message_length = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &response_message_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool echo_peer = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &echo_peer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string expected_client_identity = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_expected_client_identity()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->expected_client_identity().data(), this->expected_client_identity().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc.testing.RequestParams.expected_client_identity"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool skip_cancelled_check = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &skip_cancelled_check_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string expected_transport_security_type = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_expected_transport_security_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->expected_transport_security_type().data(), this->expected_transport_security_type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc.testing.RequestParams.expected_transport_security_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grpc.testing.DebugInfo debug_info = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_debug_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool server_die = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &server_die_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string binary_error_details = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_binary_error_details()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->binary_error_details().data(), this->binary_error_details().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc.testing.RequestParams.binary_error_details"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grpc.testing.ErrorStatus expected_error = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_expected_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc.testing.RequestParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc.testing.RequestParams)
  return false;
#undef DO_
}

void RequestParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc.testing.RequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool echo_deadline = 1;
  if (this->echo_deadline() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->echo_deadline(), output);
  }

  // int32 client_cancel_after_us = 2;
  if (this->client_cancel_after_us() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->client_cancel_after_us(), output);
  }

  // int32 server_cancel_after_us = 3;
  if (this->server_cancel_after_us() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->server_cancel_after_us(), output);
  }

  // bool echo_metadata = 4;
  if (this->echo_metadata() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->echo_metadata(), output);
  }

  // bool check_auth_context = 5;
  if (this->check_auth_context() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->check_auth_context(), output);
  }

  // int32 response_message_length = 6;
  if (this->response_message_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->response_message_length(), output);
  }

  // bool echo_peer = 7;
  if (this->echo_peer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->echo_peer(), output);
  }

  // string expected_client_identity = 8;
  if (this->expected_client_identity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->expected_client_identity().data(), this->expected_client_identity().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc.testing.RequestParams.expected_client_identity");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->expected_client_identity(), output);
  }

  // bool skip_cancelled_check = 9;
  if (this->skip_cancelled_check() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->skip_cancelled_check(), output);
  }

  // string expected_transport_security_type = 10;
  if (this->expected_transport_security_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->expected_transport_security_type().data(), this->expected_transport_security_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc.testing.RequestParams.expected_transport_security_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->expected_transport_security_type(), output);
  }

  // .grpc.testing.DebugInfo debug_info = 11;
  if (this->has_debug_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->debug_info_, output);
  }

  // bool server_die = 12;
  if (this->server_die() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->server_die(), output);
  }

  // string binary_error_details = 13;
  if (this->binary_error_details().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->binary_error_details().data(), this->binary_error_details().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc.testing.RequestParams.binary_error_details");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->binary_error_details(), output);
  }

  // .grpc.testing.ErrorStatus expected_error = 14;
  if (this->has_expected_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->expected_error_, output);
  }

  // @@protoc_insertion_point(serialize_end:grpc.testing.RequestParams)
}

::google::protobuf::uint8* RequestParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.testing.RequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool echo_deadline = 1;
  if (this->echo_deadline() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->echo_deadline(), target);
  }

  // int32 client_cancel_after_us = 2;
  if (this->client_cancel_after_us() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->client_cancel_after_us(), target);
  }

  // int32 server_cancel_after_us = 3;
  if (this->server_cancel_after_us() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->server_cancel_after_us(), target);
  }

  // bool echo_metadata = 4;
  if (this->echo_metadata() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->echo_metadata(), target);
  }

  // bool check_auth_context = 5;
  if (this->check_auth_context() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->check_auth_context(), target);
  }

  // int32 response_message_length = 6;
  if (this->response_message_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->response_message_length(), target);
  }

  // bool echo_peer = 7;
  if (this->echo_peer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->echo_peer(), target);
  }

  // string expected_client_identity = 8;
  if (this->expected_client_identity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->expected_client_identity().data(), this->expected_client_identity().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc.testing.RequestParams.expected_client_identity");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->expected_client_identity(), target);
  }

  // bool skip_cancelled_check = 9;
  if (this->skip_cancelled_check() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->skip_cancelled_check(), target);
  }

  // string expected_transport_security_type = 10;
  if (this->expected_transport_security_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->expected_transport_security_type().data(), this->expected_transport_security_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc.testing.RequestParams.expected_transport_security_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->expected_transport_security_type(), target);
  }

  // .grpc.testing.DebugInfo debug_info = 11;
  if (this->has_debug_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->debug_info_, deterministic, target);
  }

  // bool server_die = 12;
  if (this->server_die() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->server_die(), target);
  }

  // string binary_error_details = 13;
  if (this->binary_error_details().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->binary_error_details().data(), this->binary_error_details().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc.testing.RequestParams.binary_error_details");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->binary_error_details(), target);
  }

  // .grpc.testing.ErrorStatus expected_error = 14;
  if (this->has_expected_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *this->expected_error_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:grpc.testing.RequestParams)
  return target;
}

size_t RequestParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.testing.RequestParams)
  size_t total_size = 0;

  // string expected_client_identity = 8;
  if (this->expected_client_identity().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->expected_client_identity());
  }

  // string expected_transport_security_type = 10;
  if (this->expected_transport_security_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->expected_transport_security_type());
  }

  // string binary_error_details = 13;
  if (this->binary_error_details().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->binary_error_details());
  }

  // .grpc.testing.DebugInfo debug_info = 11;
  if (this->has_debug_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->debug_info_);
  }

  // .grpc.testing.ErrorStatus expected_error = 14;
  if (this->has_expected_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->expected_error_);
  }

  // int32 client_cancel_after_us = 2;
  if (this->client_cancel_after_us() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_cancel_after_us());
  }

  // int32 server_cancel_after_us = 3;
  if (this->server_cancel_after_us() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->server_cancel_after_us());
  }

  // bool echo_deadline = 1;
  if (this->echo_deadline() != 0) {
    total_size += 1 + 1;
  }

  // bool echo_metadata = 4;
  if (this->echo_metadata() != 0) {
    total_size += 1 + 1;
  }

  // bool check_auth_context = 5;
  if (this->check_auth_context() != 0) {
    total_size += 1 + 1;
  }

  // bool echo_peer = 7;
  if (this->echo_peer() != 0) {
    total_size += 1 + 1;
  }

  // int32 response_message_length = 6;
  if (this->response_message_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->response_message_length());
  }

  // bool skip_cancelled_check = 9;
  if (this->skip_cancelled_check() != 0) {
    total_size += 1 + 1;
  }

  // bool server_die = 12;
  if (this->server_die() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.testing.RequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RequestParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.testing.RequestParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.testing.RequestParams)
    MergeFrom(*source);
  }
}

void RequestParams::MergeFrom(const RequestParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.testing.RequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.expected_client_identity().size() > 0) {

    expected_client_identity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.expected_client_identity_);
  }
  if (from.expected_transport_security_type().size() > 0) {

    expected_transport_security_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.expected_transport_security_type_);
  }
  if (from.binary_error_details().size() > 0) {

    binary_error_details_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.binary_error_details_);
  }
  if (from.has_debug_info()) {
    mutable_debug_info()->::grpc::testing::DebugInfo::MergeFrom(from.debug_info());
  }
  if (from.has_expected_error()) {
    mutable_expected_error()->::grpc::testing::ErrorStatus::MergeFrom(from.expected_error());
  }
  if (from.client_cancel_after_us() != 0) {
    set_client_cancel_after_us(from.client_cancel_after_us());
  }
  if (from.server_cancel_after_us() != 0) {
    set_server_cancel_after_us(from.server_cancel_after_us());
  }
  if (from.echo_deadline() != 0) {
    set_echo_deadline(from.echo_deadline());
  }
  if (from.echo_metadata() != 0) {
    set_echo_metadata(from.echo_metadata());
  }
  if (from.check_auth_context() != 0) {
    set_check_auth_context(from.check_auth_context());
  }
  if (from.echo_peer() != 0) {
    set_echo_peer(from.echo_peer());
  }
  if (from.response_message_length() != 0) {
    set_response_message_length(from.response_message_length());
  }
  if (from.skip_cancelled_check() != 0) {
    set_skip_cancelled_check(from.skip_cancelled_check());
  }
  if (from.server_die() != 0) {
    set_server_die(from.server_die());
  }
}

void RequestParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.testing.RequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestParams::CopyFrom(const RequestParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.testing.RequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestParams::IsInitialized() const {
  return true;
}

void RequestParams::Swap(RequestParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestParams::InternalSwap(RequestParams* other) {
  expected_client_identity_.Swap(&other->expected_client_identity_);
  expected_transport_security_type_.Swap(&other->expected_transport_security_type_);
  binary_error_details_.Swap(&other->binary_error_details_);
  std::swap(debug_info_, other->debug_info_);
  std::swap(expected_error_, other->expected_error_);
  std::swap(client_cancel_after_us_, other->client_cancel_after_us_);
  std::swap(server_cancel_after_us_, other->server_cancel_after_us_);
  std::swap(echo_deadline_, other->echo_deadline_);
  std::swap(echo_metadata_, other->echo_metadata_);
  std::swap(check_auth_context_, other->check_auth_context_);
  std::swap(echo_peer_, other->echo_peer_);
  std::swap(response_message_length_, other->response_message_length_);
  std::swap(skip_cancelled_check_, other->skip_cancelled_check_);
  std::swap(server_die_, other->server_die_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RequestParams::GetMetadata() const {
  protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RequestParams

// bool echo_deadline = 1;
void RequestParams::clear_echo_deadline() {
  echo_deadline_ = false;
}
bool RequestParams::echo_deadline() const {
  // @@protoc_insertion_point(field_get:grpc.testing.RequestParams.echo_deadline)
  return echo_deadline_;
}
void RequestParams::set_echo_deadline(bool value) {
  
  echo_deadline_ = value;
  // @@protoc_insertion_point(field_set:grpc.testing.RequestParams.echo_deadline)
}

// int32 client_cancel_after_us = 2;
void RequestParams::clear_client_cancel_after_us() {
  client_cancel_after_us_ = 0;
}
::google::protobuf::int32 RequestParams::client_cancel_after_us() const {
  // @@protoc_insertion_point(field_get:grpc.testing.RequestParams.client_cancel_after_us)
  return client_cancel_after_us_;
}
void RequestParams::set_client_cancel_after_us(::google::protobuf::int32 value) {
  
  client_cancel_after_us_ = value;
  // @@protoc_insertion_point(field_set:grpc.testing.RequestParams.client_cancel_after_us)
}

// int32 server_cancel_after_us = 3;
void RequestParams::clear_server_cancel_after_us() {
  server_cancel_after_us_ = 0;
}
::google::protobuf::int32 RequestParams::server_cancel_after_us() const {
  // @@protoc_insertion_point(field_get:grpc.testing.RequestParams.server_cancel_after_us)
  return server_cancel_after_us_;
}
void RequestParams::set_server_cancel_after_us(::google::protobuf::int32 value) {
  
  server_cancel_after_us_ = value;
  // @@protoc_insertion_point(field_set:grpc.testing.RequestParams.server_cancel_after_us)
}

// bool echo_metadata = 4;
void RequestParams::clear_echo_metadata() {
  echo_metadata_ = false;
}
bool RequestParams::echo_metadata() const {
  // @@protoc_insertion_point(field_get:grpc.testing.RequestParams.echo_metadata)
  return echo_metadata_;
}
void RequestParams::set_echo_metadata(bool value) {
  
  echo_metadata_ = value;
  // @@protoc_insertion_point(field_set:grpc.testing.RequestParams.echo_metadata)
}

// bool check_auth_context = 5;
void RequestParams::clear_check_auth_context() {
  check_auth_context_ = false;
}
bool RequestParams::check_auth_context() const {
  // @@protoc_insertion_point(field_get:grpc.testing.RequestParams.check_auth_context)
  return check_auth_context_;
}
void RequestParams::set_check_auth_context(bool value) {
  
  check_auth_context_ = value;
  // @@protoc_insertion_point(field_set:grpc.testing.RequestParams.check_auth_context)
}

// int32 response_message_length = 6;
void RequestParams::clear_response_message_length() {
  response_message_length_ = 0;
}
::google::protobuf::int32 RequestParams::response_message_length() const {
  // @@protoc_insertion_point(field_get:grpc.testing.RequestParams.response_message_length)
  return response_message_length_;
}
void RequestParams::set_response_message_length(::google::protobuf::int32 value) {
  
  response_message_length_ = value;
  // @@protoc_insertion_point(field_set:grpc.testing.RequestParams.response_message_length)
}

// bool echo_peer = 7;
void RequestParams::clear_echo_peer() {
  echo_peer_ = false;
}
bool RequestParams::echo_peer() const {
  // @@protoc_insertion_point(field_get:grpc.testing.RequestParams.echo_peer)
  return echo_peer_;
}
void RequestParams::set_echo_peer(bool value) {
  
  echo_peer_ = value;
  // @@protoc_insertion_point(field_set:grpc.testing.RequestParams.echo_peer)
}

// string expected_client_identity = 8;
void RequestParams::clear_expected_client_identity() {
  expected_client_identity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RequestParams::expected_client_identity() const {
  // @@protoc_insertion_point(field_get:grpc.testing.RequestParams.expected_client_identity)
  return expected_client_identity_.GetNoArena();
}
void RequestParams::set_expected_client_identity(const ::std::string& value) {
  
  expected_client_identity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.testing.RequestParams.expected_client_identity)
}
#if LANG_CXX11
void RequestParams::set_expected_client_identity(::std::string&& value) {
  
  expected_client_identity_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.testing.RequestParams.expected_client_identity)
}
#endif
void RequestParams::set_expected_client_identity(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  expected_client_identity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.testing.RequestParams.expected_client_identity)
}
void RequestParams::set_expected_client_identity(const char* value, size_t size) {
  
  expected_client_identity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.testing.RequestParams.expected_client_identity)
}
::std::string* RequestParams::mutable_expected_client_identity() {
  
  // @@protoc_insertion_point(field_mutable:grpc.testing.RequestParams.expected_client_identity)
  return expected_client_identity_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RequestParams::release_expected_client_identity() {
  // @@protoc_insertion_point(field_release:grpc.testing.RequestParams.expected_client_identity)
  
  return expected_client_identity_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestParams::set_allocated_expected_client_identity(::std::string* expected_client_identity) {
  if (expected_client_identity != NULL) {
    
  } else {
    
  }
  expected_client_identity_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), expected_client_identity);
  // @@protoc_insertion_point(field_set_allocated:grpc.testing.RequestParams.expected_client_identity)
}

// bool skip_cancelled_check = 9;
void RequestParams::clear_skip_cancelled_check() {
  skip_cancelled_check_ = false;
}
bool RequestParams::skip_cancelled_check() const {
  // @@protoc_insertion_point(field_get:grpc.testing.RequestParams.skip_cancelled_check)
  return skip_cancelled_check_;
}
void RequestParams::set_skip_cancelled_check(bool value) {
  
  skip_cancelled_check_ = value;
  // @@protoc_insertion_point(field_set:grpc.testing.RequestParams.skip_cancelled_check)
}

// string expected_transport_security_type = 10;
void RequestParams::clear_expected_transport_security_type() {
  expected_transport_security_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RequestParams::expected_transport_security_type() const {
  // @@protoc_insertion_point(field_get:grpc.testing.RequestParams.expected_transport_security_type)
  return expected_transport_security_type_.GetNoArena();
}
void RequestParams::set_expected_transport_security_type(const ::std::string& value) {
  
  expected_transport_security_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.testing.RequestParams.expected_transport_security_type)
}
#if LANG_CXX11
void RequestParams::set_expected_transport_security_type(::std::string&& value) {
  
  expected_transport_security_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.testing.RequestParams.expected_transport_security_type)
}
#endif
void RequestParams::set_expected_transport_security_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  expected_transport_security_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.testing.RequestParams.expected_transport_security_type)
}
void RequestParams::set_expected_transport_security_type(const char* value, size_t size) {
  
  expected_transport_security_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.testing.RequestParams.expected_transport_security_type)
}
::std::string* RequestParams::mutable_expected_transport_security_type() {
  
  // @@protoc_insertion_point(field_mutable:grpc.testing.RequestParams.expected_transport_security_type)
  return expected_transport_security_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RequestParams::release_expected_transport_security_type() {
  // @@protoc_insertion_point(field_release:grpc.testing.RequestParams.expected_transport_security_type)
  
  return expected_transport_security_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestParams::set_allocated_expected_transport_security_type(::std::string* expected_transport_security_type) {
  if (expected_transport_security_type != NULL) {
    
  } else {
    
  }
  expected_transport_security_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), expected_transport_security_type);
  // @@protoc_insertion_point(field_set_allocated:grpc.testing.RequestParams.expected_transport_security_type)
}

// .grpc.testing.DebugInfo debug_info = 11;
bool RequestParams::has_debug_info() const {
  return this != internal_default_instance() && debug_info_ != NULL;
}
void RequestParams::clear_debug_info() {
  if (GetArenaNoVirtual() == NULL && debug_info_ != NULL) delete debug_info_;
  debug_info_ = NULL;
}
const ::grpc::testing::DebugInfo& RequestParams::debug_info() const {
  // @@protoc_insertion_point(field_get:grpc.testing.RequestParams.debug_info)
  return debug_info_ != NULL ? *debug_info_
                         : *::grpc::testing::DebugInfo::internal_default_instance();
}
::grpc::testing::DebugInfo* RequestParams::mutable_debug_info() {
  
  if (debug_info_ == NULL) {
    debug_info_ = new ::grpc::testing::DebugInfo;
  }
  // @@protoc_insertion_point(field_mutable:grpc.testing.RequestParams.debug_info)
  return debug_info_;
}
::grpc::testing::DebugInfo* RequestParams::release_debug_info() {
  // @@protoc_insertion_point(field_release:grpc.testing.RequestParams.debug_info)
  
  ::grpc::testing::DebugInfo* temp = debug_info_;
  debug_info_ = NULL;
  return temp;
}
void RequestParams::set_allocated_debug_info(::grpc::testing::DebugInfo* debug_info) {
  delete debug_info_;
  debug_info_ = debug_info;
  if (debug_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.testing.RequestParams.debug_info)
}

// bool server_die = 12;
void RequestParams::clear_server_die() {
  server_die_ = false;
}
bool RequestParams::server_die() const {
  // @@protoc_insertion_point(field_get:grpc.testing.RequestParams.server_die)
  return server_die_;
}
void RequestParams::set_server_die(bool value) {
  
  server_die_ = value;
  // @@protoc_insertion_point(field_set:grpc.testing.RequestParams.server_die)
}

// string binary_error_details = 13;
void RequestParams::clear_binary_error_details() {
  binary_error_details_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RequestParams::binary_error_details() const {
  // @@protoc_insertion_point(field_get:grpc.testing.RequestParams.binary_error_details)
  return binary_error_details_.GetNoArena();
}
void RequestParams::set_binary_error_details(const ::std::string& value) {
  
  binary_error_details_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.testing.RequestParams.binary_error_details)
}
#if LANG_CXX11
void RequestParams::set_binary_error_details(::std::string&& value) {
  
  binary_error_details_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.testing.RequestParams.binary_error_details)
}
#endif
void RequestParams::set_binary_error_details(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  binary_error_details_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.testing.RequestParams.binary_error_details)
}
void RequestParams::set_binary_error_details(const char* value, size_t size) {
  
  binary_error_details_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.testing.RequestParams.binary_error_details)
}
::std::string* RequestParams::mutable_binary_error_details() {
  
  // @@protoc_insertion_point(field_mutable:grpc.testing.RequestParams.binary_error_details)
  return binary_error_details_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RequestParams::release_binary_error_details() {
  // @@protoc_insertion_point(field_release:grpc.testing.RequestParams.binary_error_details)
  
  return binary_error_details_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestParams::set_allocated_binary_error_details(::std::string* binary_error_details) {
  if (binary_error_details != NULL) {
    
  } else {
    
  }
  binary_error_details_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), binary_error_details);
  // @@protoc_insertion_point(field_set_allocated:grpc.testing.RequestParams.binary_error_details)
}

// .grpc.testing.ErrorStatus expected_error = 14;
bool RequestParams::has_expected_error() const {
  return this != internal_default_instance() && expected_error_ != NULL;
}
void RequestParams::clear_expected_error() {
  if (GetArenaNoVirtual() == NULL && expected_error_ != NULL) delete expected_error_;
  expected_error_ = NULL;
}
const ::grpc::testing::ErrorStatus& RequestParams::expected_error() const {
  // @@protoc_insertion_point(field_get:grpc.testing.RequestParams.expected_error)
  return expected_error_ != NULL ? *expected_error_
                         : *::grpc::testing::ErrorStatus::internal_default_instance();
}
::grpc::testing::ErrorStatus* RequestParams::mutable_expected_error() {
  
  if (expected_error_ == NULL) {
    expected_error_ = new ::grpc::testing::ErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:grpc.testing.RequestParams.expected_error)
  return expected_error_;
}
::grpc::testing::ErrorStatus* RequestParams::release_expected_error() {
  // @@protoc_insertion_point(field_release:grpc.testing.RequestParams.expected_error)
  
  ::grpc::testing::ErrorStatus* temp = expected_error_;
  expected_error_ = NULL;
  return temp;
}
void RequestParams::set_allocated_expected_error(::grpc::testing::ErrorStatus* expected_error) {
  delete expected_error_;
  expected_error_ = expected_error;
  if (expected_error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.testing.RequestParams.expected_error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EchoRequest::kMessageFieldNumber;
const int EchoRequest::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EchoRequest::EchoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc.testing.EchoRequest)
}
EchoRequest::EchoRequest(const EchoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_param()) {
    param_ = new ::grpc::testing::RequestParams(*from.param_);
  } else {
    param_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:grpc.testing.EchoRequest)
}

void EchoRequest::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param_ = NULL;
  _cached_size_ = 0;
}

EchoRequest::~EchoRequest() {
  // @@protoc_insertion_point(destructor:grpc.testing.EchoRequest)
  SharedDtor();
}

void EchoRequest::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete param_;
  }
}

void EchoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EchoRequest::descriptor() {
  protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EchoRequest& EchoRequest::default_instance() {
  protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

EchoRequest* EchoRequest::New(::google::protobuf::Arena* arena) const {
  EchoRequest* n = new EchoRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EchoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.testing.EchoRequest)
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && param_ != NULL) {
    delete param_;
  }
  param_ = NULL;
}

bool EchoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc.testing.EchoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc.testing.EchoRequest.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grpc.testing.RequestParams param = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc.testing.EchoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc.testing.EchoRequest)
  return false;
#undef DO_
}

void EchoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc.testing.EchoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc.testing.EchoRequest.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // .grpc.testing.RequestParams param = 2;
  if (this->has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->param_, output);
  }

  // @@protoc_insertion_point(serialize_end:grpc.testing.EchoRequest)
}

::google::protobuf::uint8* EchoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.testing.EchoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc.testing.EchoRequest.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  // .grpc.testing.RequestParams param = 2;
  if (this->has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->param_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:grpc.testing.EchoRequest)
  return target;
}

size_t EchoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.testing.EchoRequest)
  size_t total_size = 0;

  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // .grpc.testing.RequestParams param = 2;
  if (this->has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EchoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.testing.EchoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EchoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EchoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.testing.EchoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.testing.EchoRequest)
    MergeFrom(*source);
  }
}

void EchoRequest::MergeFrom(const EchoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.testing.EchoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_param()) {
    mutable_param()->::grpc::testing::RequestParams::MergeFrom(from.param());
  }
}

void EchoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.testing.EchoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EchoRequest::CopyFrom(const EchoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.testing.EchoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EchoRequest::IsInitialized() const {
  return true;
}

void EchoRequest::Swap(EchoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EchoRequest::InternalSwap(EchoRequest* other) {
  message_.Swap(&other->message_);
  std::swap(param_, other->param_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EchoRequest::GetMetadata() const {
  protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EchoRequest

// string message = 1;
void EchoRequest::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EchoRequest::message() const {
  // @@protoc_insertion_point(field_get:grpc.testing.EchoRequest.message)
  return message_.GetNoArena();
}
void EchoRequest::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.testing.EchoRequest.message)
}
#if LANG_CXX11
void EchoRequest::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.testing.EchoRequest.message)
}
#endif
void EchoRequest::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.testing.EchoRequest.message)
}
void EchoRequest::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.testing.EchoRequest.message)
}
::std::string* EchoRequest::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:grpc.testing.EchoRequest.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EchoRequest::release_message() {
  // @@protoc_insertion_point(field_release:grpc.testing.EchoRequest.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EchoRequest::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:grpc.testing.EchoRequest.message)
}

// .grpc.testing.RequestParams param = 2;
bool EchoRequest::has_param() const {
  return this != internal_default_instance() && param_ != NULL;
}
void EchoRequest::clear_param() {
  if (GetArenaNoVirtual() == NULL && param_ != NULL) delete param_;
  param_ = NULL;
}
const ::grpc::testing::RequestParams& EchoRequest::param() const {
  // @@protoc_insertion_point(field_get:grpc.testing.EchoRequest.param)
  return param_ != NULL ? *param_
                         : *::grpc::testing::RequestParams::internal_default_instance();
}
::grpc::testing::RequestParams* EchoRequest::mutable_param() {
  
  if (param_ == NULL) {
    param_ = new ::grpc::testing::RequestParams;
  }
  // @@protoc_insertion_point(field_mutable:grpc.testing.EchoRequest.param)
  return param_;
}
::grpc::testing::RequestParams* EchoRequest::release_param() {
  // @@protoc_insertion_point(field_release:grpc.testing.EchoRequest.param)
  
  ::grpc::testing::RequestParams* temp = param_;
  param_ = NULL;
  return temp;
}
void EchoRequest::set_allocated_param(::grpc::testing::RequestParams* param) {
  delete param_;
  param_ = param;
  if (param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.testing.EchoRequest.param)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseParams::kRequestDeadlineFieldNumber;
const int ResponseParams::kHostFieldNumber;
const int ResponseParams::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseParams::ResponseParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc.testing.ResponseParams)
}
ResponseParams::ResponseParams(const ResponseParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.host().size() > 0) {
    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  peer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.peer().size() > 0) {
    peer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.peer_);
  }
  request_deadline_ = from.request_deadline_;
  // @@protoc_insertion_point(copy_constructor:grpc.testing.ResponseParams)
}

void ResponseParams::SharedCtor() {
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  peer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_deadline_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

ResponseParams::~ResponseParams() {
  // @@protoc_insertion_point(destructor:grpc.testing.ResponseParams)
  SharedDtor();
}

void ResponseParams::SharedDtor() {
  host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  peer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResponseParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseParams::descriptor() {
  protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResponseParams& ResponseParams::default_instance() {
  protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

ResponseParams* ResponseParams::New(::google::protobuf::Arena* arena) const {
  ResponseParams* n = new ResponseParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResponseParams::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.testing.ResponseParams)
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  peer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_deadline_ = GOOGLE_LONGLONG(0);
}

bool ResponseParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc.testing.ResponseParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 request_deadline = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &request_deadline_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string host = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->host().data(), this->host().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc.testing.ResponseParams.host"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string peer = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_peer()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->peer().data(), this->peer().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc.testing.ResponseParams.peer"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc.testing.ResponseParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc.testing.ResponseParams)
  return false;
#undef DO_
}

void ResponseParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc.testing.ResponseParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 request_deadline = 1;
  if (this->request_deadline() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->request_deadline(), output);
  }

  // string host = 2;
  if (this->host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host().data(), this->host().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc.testing.ResponseParams.host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->host(), output);
  }

  // string peer = 3;
  if (this->peer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->peer().data(), this->peer().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc.testing.ResponseParams.peer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->peer(), output);
  }

  // @@protoc_insertion_point(serialize_end:grpc.testing.ResponseParams)
}

::google::protobuf::uint8* ResponseParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.testing.ResponseParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 request_deadline = 1;
  if (this->request_deadline() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->request_deadline(), target);
  }

  // string host = 2;
  if (this->host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host().data(), this->host().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc.testing.ResponseParams.host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->host(), target);
  }

  // string peer = 3;
  if (this->peer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->peer().data(), this->peer().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc.testing.ResponseParams.peer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->peer(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:grpc.testing.ResponseParams)
  return target;
}

size_t ResponseParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.testing.ResponseParams)
  size_t total_size = 0;

  // string host = 2;
  if (this->host().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host());
  }

  // string peer = 3;
  if (this->peer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->peer());
  }

  // int64 request_deadline = 1;
  if (this->request_deadline() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->request_deadline());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.testing.ResponseParams)
  GOOGLE_DCHECK_NE(&from, this);
  const ResponseParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResponseParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.testing.ResponseParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.testing.ResponseParams)
    MergeFrom(*source);
  }
}

void ResponseParams::MergeFrom(const ResponseParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.testing.ResponseParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.host().size() > 0) {

    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  if (from.peer().size() > 0) {

    peer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.peer_);
  }
  if (from.request_deadline() != 0) {
    set_request_deadline(from.request_deadline());
  }
}

void ResponseParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.testing.ResponseParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseParams::CopyFrom(const ResponseParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.testing.ResponseParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseParams::IsInitialized() const {
  return true;
}

void ResponseParams::Swap(ResponseParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseParams::InternalSwap(ResponseParams* other) {
  host_.Swap(&other->host_);
  peer_.Swap(&other->peer_);
  std::swap(request_deadline_, other->request_deadline_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResponseParams::GetMetadata() const {
  protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResponseParams

// int64 request_deadline = 1;
void ResponseParams::clear_request_deadline() {
  request_deadline_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ResponseParams::request_deadline() const {
  // @@protoc_insertion_point(field_get:grpc.testing.ResponseParams.request_deadline)
  return request_deadline_;
}
void ResponseParams::set_request_deadline(::google::protobuf::int64 value) {
  
  request_deadline_ = value;
  // @@protoc_insertion_point(field_set:grpc.testing.ResponseParams.request_deadline)
}

// string host = 2;
void ResponseParams::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ResponseParams::host() const {
  // @@protoc_insertion_point(field_get:grpc.testing.ResponseParams.host)
  return host_.GetNoArena();
}
void ResponseParams::set_host(const ::std::string& value) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.testing.ResponseParams.host)
}
#if LANG_CXX11
void ResponseParams::set_host(::std::string&& value) {
  
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.testing.ResponseParams.host)
}
#endif
void ResponseParams::set_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.testing.ResponseParams.host)
}
void ResponseParams::set_host(const char* value, size_t size) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.testing.ResponseParams.host)
}
::std::string* ResponseParams::mutable_host() {
  
  // @@protoc_insertion_point(field_mutable:grpc.testing.ResponseParams.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ResponseParams::release_host() {
  // @@protoc_insertion_point(field_release:grpc.testing.ResponseParams.host)
  
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResponseParams::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    
  } else {
    
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:grpc.testing.ResponseParams.host)
}

// string peer = 3;
void ResponseParams::clear_peer() {
  peer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ResponseParams::peer() const {
  // @@protoc_insertion_point(field_get:grpc.testing.ResponseParams.peer)
  return peer_.GetNoArena();
}
void ResponseParams::set_peer(const ::std::string& value) {
  
  peer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.testing.ResponseParams.peer)
}
#if LANG_CXX11
void ResponseParams::set_peer(::std::string&& value) {
  
  peer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.testing.ResponseParams.peer)
}
#endif
void ResponseParams::set_peer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  peer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.testing.ResponseParams.peer)
}
void ResponseParams::set_peer(const char* value, size_t size) {
  
  peer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.testing.ResponseParams.peer)
}
::std::string* ResponseParams::mutable_peer() {
  
  // @@protoc_insertion_point(field_mutable:grpc.testing.ResponseParams.peer)
  return peer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ResponseParams::release_peer() {
  // @@protoc_insertion_point(field_release:grpc.testing.ResponseParams.peer)
  
  return peer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResponseParams::set_allocated_peer(::std::string* peer) {
  if (peer != NULL) {
    
  } else {
    
  }
  peer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), peer);
  // @@protoc_insertion_point(field_set_allocated:grpc.testing.ResponseParams.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EchoResponse::kMessageFieldNumber;
const int EchoResponse::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EchoResponse::EchoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc.testing.EchoResponse)
}
EchoResponse::EchoResponse(const EchoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_param()) {
    param_ = new ::grpc::testing::ResponseParams(*from.param_);
  } else {
    param_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:grpc.testing.EchoResponse)
}

void EchoResponse::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param_ = NULL;
  _cached_size_ = 0;
}

EchoResponse::~EchoResponse() {
  // @@protoc_insertion_point(destructor:grpc.testing.EchoResponse)
  SharedDtor();
}

void EchoResponse::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete param_;
  }
}

void EchoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EchoResponse::descriptor() {
  protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EchoResponse& EchoResponse::default_instance() {
  protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

EchoResponse* EchoResponse::New(::google::protobuf::Arena* arena) const {
  EchoResponse* n = new EchoResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EchoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.testing.EchoResponse)
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && param_ != NULL) {
    delete param_;
  }
  param_ = NULL;
}

bool EchoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc.testing.EchoResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc.testing.EchoResponse.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grpc.testing.ResponseParams param = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc.testing.EchoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc.testing.EchoResponse)
  return false;
#undef DO_
}

void EchoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc.testing.EchoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc.testing.EchoResponse.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // .grpc.testing.ResponseParams param = 2;
  if (this->has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->param_, output);
  }

  // @@protoc_insertion_point(serialize_end:grpc.testing.EchoResponse)
}

::google::protobuf::uint8* EchoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.testing.EchoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc.testing.EchoResponse.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  // .grpc.testing.ResponseParams param = 2;
  if (this->has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->param_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:grpc.testing.EchoResponse)
  return target;
}

size_t EchoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.testing.EchoResponse)
  size_t total_size = 0;

  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // .grpc.testing.ResponseParams param = 2;
  if (this->has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EchoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.testing.EchoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EchoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EchoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.testing.EchoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.testing.EchoResponse)
    MergeFrom(*source);
  }
}

void EchoResponse::MergeFrom(const EchoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.testing.EchoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_param()) {
    mutable_param()->::grpc::testing::ResponseParams::MergeFrom(from.param());
  }
}

void EchoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.testing.EchoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EchoResponse::CopyFrom(const EchoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.testing.EchoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EchoResponse::IsInitialized() const {
  return true;
}

void EchoResponse::Swap(EchoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EchoResponse::InternalSwap(EchoResponse* other) {
  message_.Swap(&other->message_);
  std::swap(param_, other->param_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EchoResponse::GetMetadata() const {
  protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_src_2fproto_2fgrpc_2ftesting_2fecho_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EchoResponse

// string message = 1;
void EchoResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EchoResponse::message() const {
  // @@protoc_insertion_point(field_get:grpc.testing.EchoResponse.message)
  return message_.GetNoArena();
}
void EchoResponse::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.testing.EchoResponse.message)
}
#if LANG_CXX11
void EchoResponse::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.testing.EchoResponse.message)
}
#endif
void EchoResponse::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.testing.EchoResponse.message)
}
void EchoResponse::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.testing.EchoResponse.message)
}
::std::string* EchoResponse::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:grpc.testing.EchoResponse.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EchoResponse::release_message() {
  // @@protoc_insertion_point(field_release:grpc.testing.EchoResponse.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EchoResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:grpc.testing.EchoResponse.message)
}

// .grpc.testing.ResponseParams param = 2;
bool EchoResponse::has_param() const {
  return this != internal_default_instance() && param_ != NULL;
}
void EchoResponse::clear_param() {
  if (GetArenaNoVirtual() == NULL && param_ != NULL) delete param_;
  param_ = NULL;
}
const ::grpc::testing::ResponseParams& EchoResponse::param() const {
  // @@protoc_insertion_point(field_get:grpc.testing.EchoResponse.param)
  return param_ != NULL ? *param_
                         : *::grpc::testing::ResponseParams::internal_default_instance();
}
::grpc::testing::ResponseParams* EchoResponse::mutable_param() {
  
  if (param_ == NULL) {
    param_ = new ::grpc::testing::ResponseParams;
  }
  // @@protoc_insertion_point(field_mutable:grpc.testing.EchoResponse.param)
  return param_;
}
::grpc::testing::ResponseParams* EchoResponse::release_param() {
  // @@protoc_insertion_point(field_release:grpc.testing.EchoResponse.param)
  
  ::grpc::testing::ResponseParams* temp = param_;
  param_ = NULL;
  return temp;
}
void EchoResponse::set_allocated_param(::grpc::testing::ResponseParams* param) {
  delete param_;
  param_ = param;
  if (param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.testing.EchoResponse.param)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace testing
}  // namespace grpc

// @@protoc_insertion_point(global_scope)
